{"version":3,"sources":["components/Expenses/ExpenseDate.jsx","components/Card.jsx","components/Expenses/ExpenseItem.jsx","components/Expenses/ExpensesFilter.jsx","components/Chart/ChartBar.jsx","components/Chart/Chart.jsx","components/Expenses/ExpensesChart.jsx","img/not-found.svg","components/Expenses/ExpensesContainer.jsx","components/Expenses/GetDateFunction.js","components/Expenses/ExpenseEdit.jsx","components/NewExpense/ExpenseForm.jsx","components/NewExpense/NewExpense.jsx","App.jsx","index.js"],"names":["ExpenseDate","props","dateString","date","split","day","month","year","className","Card","classes","onClick","children","ExpenseItem","onExpenseId","id","title","type","amount","toLocaleString","minimumFractionDigits","style","currency","ExpensesFilter","currentYear","Date","getFullYear","onChange","e","onGetPickedYear","target","value","ChartBar","barFillHeight","maxValue","Math","round","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","max","random","ExpensesChart","chartDataPoints","expenses","expense","console","log","ExpensesContainer","useState","pickedYear","setPickedYear","filteredExpenses","filter","expenseIdHandler","data","selectedYear","length","src","notFound","alt","getDateYMD","today","dd","String","getDate","padStart","mm","getMonth","yyyy","ExpenseEdit","editingExpense","editedExpense","titleEditErrorMsg","setTitleEditErrorMsg","amountEditErrorMsg","setAmountEditErrorMsg","titleEditInput","setTitleEditInput","amountEditInput","setAmountEditInput","dateEditInput","setDateEditInput","typeEditInput","setTypeEditInput","yearInput","setYearInput","display","show","onSubmit","preventDefault","validationTests","replace","trim","updatedExpenseList","JSON","parse","localStorage","getItem","forEach","expenseToBeEdited","NotificationManager","success","onUpdateUi","onGetCanceled","autoFocus","placeholder","maxLength","step","color","backgroundColor","margin","selected","disabled","reverse","join","min","dateYear","expenseListAfterDeletion","expenseToBeDeleted","setItem","stringify","info","onGetDeleted","ExpenseForm","titleInputRef","useRef","amountInputRef","dateInputRef","newExpenseIsOpen","setNewExpenseIsOpen","typeInput","setTypeInput","titleInputClass","setTitleInputClass","amountInputClass","setAmountInputClass","titleErrorMsg","setTitleErrorMsg","amountErrorMsg","setAmountErrorMsg","ToggleNewExpense","current","expenseData","onExpenseData","ref","defaultValue","NewExpense","getRandomID","floor","undefined","find","val","enteredExpenseData","onGetNewExpense","App","expensesArray","expensesList","setExpensesList","idOfExpenseBeingEdited","setIdOfExpenseBeingEdited","newExpense","prevExpenses","ReactDOM","createPortal","dataFromExpenseEdit","document","getElementById","render"],"mappings":"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","file":"static/js/main.ff74bea8.chunk.js","sourcesContent":["import \"../styles/ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const dateString = props.date.split(\"-\");\r\n\r\n  const day = dateString[2];\r\n  let month = dateString[1];\r\n  switch (month) {\r\n    case \"01\":\r\n      month = \"Jan.\";\r\n      break;\r\n\r\n    case \"02\":\r\n      month = \"Fev.\";\r\n      break;\r\n\r\n    case \"03\":\r\n      month = \"Mar.\";\r\n      break;\r\n\r\n    case \"04\":\r\n      month = \"Abr.\";\r\n      break;\r\n\r\n    case \"05\":\r\n      month = \"Maio\";\r\n      break;\r\n\r\n    case \"06\":\r\n      month = \"Jun.\";\r\n      break;\r\n\r\n    case \"07\":\r\n      month = \"Jul.\";\r\n      break;\r\n\r\n    case \"08\":\r\n      month = \"Ago.\";\r\n      break;\r\n\r\n    case \"09\":\r\n      month = \"Set.\";\r\n      break;\r\n\r\n    case \"10\":\r\n      month = \"Out.\";\r\n      break;\r\n\r\n    case \"11\":\r\n      month = \"Nov.\";\r\n      break;\r\n\r\n    case \"12\":\r\n      month = \"Dez.\";\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  const year = dateString[0];\r\n  // const month = props.date.toLocaleString(\"pt-BR\", { month: \"short\" });\r\n  // const day = props.date.toLocaleString(\"pt-BR\", { day: \"2-digit\" });\r\n  // const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__day\">{day} </div>\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import \"./styles/Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = `card ${props.className}`;\r\n  return (\r\n    <div className={classes} onClick={props.onClick}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"../styles/ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../Card.jsx\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  const clickHandler = () => {\r\n    props.onExpenseId(props.id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"expense-item\" onClick={clickHandler}>\r\n        <div>\r\n          <ExpenseDate date={props.date} />\r\n        </div>\r\n        <div className=\"expense-item__description\">\r\n          <div className=\"expense-item__descbox\">\r\n            <h2>{props.title}</h2>\r\n            <span>{props.type}</span>\r\n          </div>\r\n          <div className=\"expense-item__price\">\r\n            {props.amount.toLocaleString(\"pt-BR\", {\r\n              minimumFractionDigits: 2,\r\n              style: \"currency\",\r\n              currency: \"BRL\",\r\n            })}\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport \"../styles/ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  const pickYearHandler = (e) => props.onGetPickedYear(e.target.value); //props.onGetPickedYear invoca a função 'pickedYearHandler' armazenada no componente pai (ExpensesContainer) e envia e.target.value como parâmetro para essa função.\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <select onChange={pickYearHandler}>\r\n          <option value=\"all\">Mostrar tudo</option>\r\n          <option value={currentYear}>{currentYear}</option>\r\n          <option value={currentYear - 1}>{currentYear - 1}</option>\r\n          <option value={currentYear - 2}>{currentYear - 2}</option>\r\n          <option value={currentYear - 3}>{currentYear - 3}</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport ChartBar from \"./ChartBar.jsx\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={Math.random()}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart.jsx\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Fev\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Abr\", value: 0 },\r\n    { label: \"Mai\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Ago\", value: 0 },\r\n    { label: \"Set\", value: 0 },\r\n    { label: \"Out\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dez\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    console.log(expense);\r\n    const expenseMonth = expense.date.split(\"-\")[1];\r\n    chartDataPoints[expenseMonth - 1].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","export default __webpack_public_path__ + \"static/media/not-found.5361d1a2.svg\";","import React, { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem.jsx\";\r\nimport Card from \"../Card.jsx\";\r\nimport ExpensesFilter from \"./ExpensesFilter.jsx\";\r\nimport ExpensesChart from \"./ExpensesChart.jsx\";\r\nimport notFound from \"../../img/not-found.svg\";\r\nimport \"../styles/ExpensesContainer.css\";\r\n\r\nconst ExpensesContainer = (props) => {\r\n  let [pickedYear, setPickedYear] = useState(\"all\");\r\n\r\n  const pickedYearHandler = (data) => {\r\n    setPickedYear(data);\r\n  };\r\n\r\n  const filteredExpenses = props.expenses.filter((expense) => {\r\n    return expense.year === pickedYear;\r\n  });\r\n\r\n  const expenseIdHandler = (data) => {\r\n    props.onExpenseId(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selectedYear={pickedYear}\r\n          onGetPickedYear={pickedYearHandler}\r\n        />\r\n        {pickedYear !== \"all\" ? (\r\n          <ExpensesChart expenses={filteredExpenses} />\r\n        ) : (\r\n          console.log(\"filter not selected\")\r\n        )}\r\n\r\n        {pickedYear === \"all\" ? (\r\n          props.expenses.length === 0 ? (\r\n            <div className=\"no-expenses-found__container\">\r\n              <img src={notFound} alt=\"Sem despesa\"></img>\r\n              <p className=\"no-expenses-found__msg\">\r\n                Não há nenhuma despesa a ser exibida.\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            props.expenses.map((expense) => (\r\n              <ExpenseItem\r\n                id={expense.id}\r\n                key={expense.id}\r\n                title={expense.title}\r\n                type={expense.type}\r\n                amount={expense.amount}\r\n                date={expense.date}\r\n                onExpenseId={expenseIdHandler}\r\n              />\r\n            ))\r\n          )\r\n        ) : filteredExpenses.length === 0 ? (\r\n          /* Se não houver despesas, exibir mensagem de erro. */\r\n          <div className=\"no-expenses-found__container\">\r\n            <img src={notFound} alt=\"Sem despesa\"></img>\r\n            <p className=\"no-expenses-found__msg\">\r\n              Não há nenhuma despesa registrada em {pickedYear}.\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          filteredExpenses.map((expense) => (\r\n            <ExpenseItem\r\n              id={expense.id}\r\n              key={expense.id}\r\n              title={expense.title}\r\n              type={expense.type}\r\n              amount={expense.amount}\r\n              date={expense.date}\r\n              onExpenseId={expenseIdHandler}\r\n            />\r\n          ))\r\n        )}\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExpensesContainer;\r\n","const getDateYMD = () => {\r\n    const today = new Date();\r\n    const dd = String(today.getDate()).padStart(2, \"0\");\r\n    const mm = String(today.getMonth() + 1).padStart(2, \"0\");\r\n    const yyyy = today.getFullYear();\r\n    return `${yyyy}-${mm}-${dd}`;\r\n  };\r\n\r\nexport default getDateYMD;\r\n","import React, { useState } from \"react\";\r\nimport \"../styles/ExpenseEdit.css\";\r\nimport getDateYMD from \"./GetDateFunction.js\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\n\r\nconst ExpenseEdit = (props) => {\r\n  //Data de hoje\r\n  const today = getDateYMD();\r\n\r\n  //Pega a expense que está sendo editada\r\n  let editingExpense = props.expenses.filter(\r\n    (expense) => expense.id === props.editedExpense\r\n  );\r\n\r\n  //States controlando as mensagens de erro\r\n  const [titleEditErrorMsg, setTitleEditErrorMsg] = useState(\"\");\r\n  const [amountEditErrorMsg, setAmountEditErrorMsg] = useState(\"\");\r\n\r\n  //States controlando os inputs\r\n  const [titleEditInput, setTitleEditInput] = useState(\r\n    editingExpense[0]?.title\r\n  );\r\n  const [amountEditInput, setAmountEditInput] = useState(\r\n    editingExpense[0]?.amount\r\n  );\r\n  const [dateEditInput, setDateEditInput] = useState(editingExpense[0]?.date);\r\n  const [typeEditInput, setTypeEditInput] = useState(editingExpense[0]?.type);\r\n  const [yearInput, setYearInput] = useState(editingExpense[0]?.year);\r\n\r\n  //Input handlers\r\n  const editTitleHandler = (e) => setTitleEditInput(e.target.value);\r\n  const editAmountHandler = (e) => setAmountEditInput(e.target.value);\r\n  const editDateHandler = (e) => {\r\n    let date = e.target.value;\r\n    setDateEditInput(date);\r\n    let dateYear = date.split(\"-\")[0];\r\n    setYearInput(dateYear);\r\n  };\r\n\r\n  const editTypeHandler = (e) => setTypeEditInput(e.target.value);\r\n\r\n  //Cancelar modal (Este data vai subir para App.jsx que vai atualizar o state)\r\n  const cancelHandler = (e) => {\r\n    e.preventDefault();\r\n    props.onGetCanceled(\"no id yet\");\r\n  };\r\n\r\n  //Deletar despesa\r\n  const deleteExpenseHandler = (e) => {\r\n    e.preventDefault();\r\n    const expenseListTemp = JSON.parse(localStorage.getItem(\"expensesArray\"));\r\n    const expenseListAfterDeletion = expenseListTemp.filter(\r\n      (expenseToBeDeleted) => expenseToBeDeleted.id !== props.editedExpense\r\n    );\r\n    localStorage.setItem(\r\n      \"expensesArray\",\r\n      JSON.stringify(expenseListAfterDeletion)\r\n    );\r\n    NotificationManager.info(\r\n      `A despesa '${editingExpense[0]?.title}' foi excluída.`\r\n    );\r\n    props.onGetDeleted();\r\n  };\r\n\r\n  //Função executada quando o formulário sofre submit\r\n  const saveHandler = (e) => {\r\n    e.preventDefault();\r\n    let validationTests = 2;\r\n\r\n    //Validação do formulário\r\n    if (\r\n      titleEditInput.length <= 2 ||\r\n      !titleEditInput.replace(/\\s/g, \"\").length\r\n    ) {\r\n      setTitleEditErrorMsg(`Deve ter ao menos 3 caracteres.`);\r\n      !titleEditInput.replace(/\\s/g, \"\").length\r\n        ? setTitleEditInput(\"\")\r\n        : console.log(\"no empty spaces\");\r\n      validationTests--;\r\n    } else {\r\n      setTitleEditErrorMsg(``);\r\n      titleEditInput.trim();\r\n    }\r\n    if (amountEditInput <= 0 || amountEditInput > 999999) {\r\n      setAmountEditErrorMsg(\"Valor deve ser entre 1 e 999,999.\");\r\n      validationTests--;\r\n    } else setAmountEditErrorMsg(\"\");\r\n\r\n    //se passar na validação, atualiza as informações\r\n    if (validationTests === 2) {\r\n      const updatedExpenseList = JSON.parse(\r\n        localStorage.getItem(\"expensesArray\")\r\n      );\r\n      //Salvou alterações\r\n      updatedExpenseList.forEach((expenseToBeEdited) => {\r\n        if (expenseToBeEdited.id === props.editedExpense) {\r\n          expenseToBeEdited.title = titleEditInput;\r\n          expenseToBeEdited.amount = +amountEditInput;\r\n          expenseToBeEdited.date = dateEditInput;\r\n          expenseToBeEdited.year = yearInput;\r\n          expenseToBeEdited.type = typeEditInput;\r\n        }\r\n      });\r\n      NotificationManager.success(\"Despesa editada com sucesso.\");\r\n      props.onUpdateUi(updatedExpenseList);\r\n      props.onGetCanceled(\"no id yet\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"overlay\"\r\n        style={{ display: props.show ? \"flex\" : \"none\" }}\r\n      ></div>\r\n      <div\r\n        className=\"expense-edit__container\"\r\n        style={{ display: props.show ? \"flex\" : \"none\" }}\r\n      >\r\n        <h2>Editar Despesa</h2>\r\n        <form onSubmit={saveHandler}>\r\n          <div className=\"new-expense__control\">\r\n            {/* Editar Título da Despesa */}\r\n            <label>Título/Descrição</label>\r\n            <input\r\n              className=\"new-expense__control__input\"\r\n              autoFocus\r\n              type=\"text\"\r\n              placeholder={editingExpense[0]?.title}\r\n              maxLength=\"15\"\r\n              onChange={editTitleHandler}\r\n            />\r\n            <p>{titleEditErrorMsg}</p>\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            {/* Editar Valor da Despesa */}\r\n            <label>Valor da despesa</label>\r\n            <input\r\n              className=\"new-expense__control__input\"\r\n              type=\"number\"\r\n              step=\"0.05\"\r\n              placeholder={editingExpense[0]?.amount}\r\n              onChange={editAmountHandler}\r\n            />\r\n            <p>{amountEditErrorMsg}</p>\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            {/* Editar Tipo da Despesa */}\r\n            <label>Tipo de Despesa</label>\r\n            <p\r\n              style={{\r\n                color: \"black\",\r\n                backgroundColor: \"rgba(255, 255, 255, 0.2)\",\r\n                margin: \"0.5rem\",\r\n              }}\r\n            >\r\n              Tipo atual: {editingExpense[0]?.type}\r\n            </p>\r\n\r\n            <select\r\n              className=\"new-expense__control__select\"\r\n              onChange={editTypeHandler}\r\n              selected={String(editingExpense[0]?.type)}\r\n            >\r\n              <option selected disabled>\r\n                Selecione um novo tipo\r\n              </option>\r\n              <option value=\"Geral\">Geral</option>\r\n              <option value=\"Contas & Impostos\">Contas & Impostos</option>\r\n              <option value=\"Lazer & Entretenimento\">\r\n                Lazer & Entretenimento\r\n              </option>\r\n              <option value=\"Saúde & Remédios\">Saúde & Remédios</option>\r\n              <option value=\"Academia\">Academia & Educação Física</option>\r\n              <option value=\"Transporte & Carro\">Transporte & Carro</option>\r\n              <option value=\"Alimentação\">Alimentação</option>\r\n              <option value=\"Necessidades Domésticas\">\r\n                Necessidades Domésticas\r\n              </option>\r\n              <option value=\"Custos com Pet's\">Custos com Pet's</option>\r\n              <option value=\"Emergências\">Emergências</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Data</label>\r\n            <p\r\n              style={{\r\n                color: \"black\",\r\n                backgroundColor: \"rgba(255, 255, 255, 0.2)\",\r\n                margin: \"0.5rem\",\r\n              }}\r\n            >\r\n              Data atual:\r\n              {editingExpense[0]?.date.split(\"-\").reverse().join(\"/\")}\r\n            </p>\r\n            <input\r\n              type=\"date\"\r\n              min=\"2018-01-01\"\r\n              max={today}\r\n              className=\"new-expense__control__input\"\r\n              onChange={editDateHandler}\r\n            />\r\n          </div>\r\n          <div className=\"button-container\">\r\n            <button className=\"cancel\" onClick={cancelHandler}>\r\n              Cancelar\r\n            </button>\r\n            <button className=\"save\">Salvar Alterações</button>\r\n          </div>\r\n          <hr />\r\n          <button className=\"delete\" onClick={deleteExpenseHandler}>\r\n            Deletar Despesa\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <NotificationContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExpenseEdit;\r\n","import React, { useState, useRef } from \"react\";\r\nimport \"../styles/ExpenseForm.css\";\r\nimport getDateYMD from \"../Expenses/GetDateFunction.js\";\r\nimport { NotificationManager } from \"react-notifications\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  //Refs\r\n  const titleInputRef = useRef();\r\n  const amountInputRef = useRef();\r\n  const dateInputRef = useRef();\r\n\r\n  //Data de hoje\r\n  const today = getDateYMD();\r\n\r\n  //Form state\r\n  const [newExpenseIsOpen, setNewExpenseIsOpen] = useState(false);\r\n\r\n  //State que controla o tipo escolhido no select\r\n  const [typeInput, setTypeInput] = useState(\"\");\r\n\r\n  //class handlers\r\n  const [titleInputClass, setTitleInputClass] = useState(\r\n    \"new-expense__control__input\"\r\n  );\r\n  const [amountInputClass, setAmountInputClass] = useState(\r\n    \"new-expense__control__input\"\r\n  );\r\n\r\n  //mensagens de erro\r\n  const [titleErrorMsg, setTitleErrorMsg] = useState(\"\");\r\n  const [amountErrorMsg, setAmountErrorMsg] = useState(\"\");\r\n\r\n  //handler que modifica o tipo da despesa escolhido no select\r\n  const changeTypeHandler = (e) => {\r\n    setTypeInput(e.target.value);\r\n  };\r\n\r\n  //Função executada no Submit do formulário\r\n  const submitHandler = (e) => {\r\n    let validationTests = 2;\r\n    e.preventDefault();\r\n    titleInputRef.current.value.trim();\r\n\r\n    //Validação do formulário\r\n    if (\r\n      titleInputRef.current.value.length <= 2 ||\r\n      !titleInputRef.current.value.replace(/\\s/g, \"\").length\r\n    ) {\r\n      setTitleInputClass(\"new-expense__control__error\");\r\n      setTitleErrorMsg(`O título precisa ter pelo menos 3 caracteres.`);\r\n      !titleInputRef.current.value.replace(/\\s/g, \"\").length\r\n        ? (titleInputRef.current.value = \"\")\r\n        : console.log(\"no empty spaces\");\r\n      validationTests--;\r\n    } else {\r\n      setTitleInputClass(\"new-expense__control__input\");\r\n      setTitleErrorMsg(``);\r\n    }\r\n    if (\r\n      amountInputRef.current.value <= 0 ||\r\n      amountInputRef.current.value > 999999\r\n    ) {\r\n      setAmountInputClass(\"new-expense__control__error\");\r\n      setAmountErrorMsg(\r\n        \"O valor precisa ser maior que zero e menor que 999,999.\"\r\n      );\r\n      validationTests--;\r\n    } else {\r\n      setAmountInputClass(\"new-expense__control__input\");\r\n      setAmountErrorMsg(\"\");\r\n    }\r\n\r\n    //se passar na validação, gera um object com os dados da despesa\r\n    if (validationTests === 2) {\r\n      const expenseData = {\r\n        title: titleInputRef.current.value,\r\n        amount: +amountInputRef.current.value,\r\n        date: dateInputRef.current.value,\r\n        year: dateInputRef.current.value.split(\"-\")[0], //Pega apenas o ano que será usado como filtro\r\n        type: typeInput === \"\" ? \"Geral\" : typeInput, //Se o tipo nao for especificado, é definido como 'geral'\r\n      };\r\n      // console.log(expenseData);\r\n      NotificationManager.success(\r\n        `Despesa do tipo \"${expenseData.type}\" registrada em ${expenseData.date\r\n          .split(\"-\")\r\n          .reverse()\r\n          .join(\"/\")}`,\r\n        `${expenseData.title}`\r\n      );\r\n      props.onExpenseData(expenseData); //data 'lift up'\r\n      titleInputRef.current.value = \"\";\r\n      dateInputRef.current.value = today;\r\n      amountInputRef.current.value = \"\";\r\n    } else console.log(\"failed validation tests\");\r\n  };\r\n\r\n  const ToggleNewExpense = () => setNewExpenseIsOpen(!newExpenseIsOpen);\r\n\r\n  return (\r\n    <>\r\n      {newExpenseIsOpen ? (\r\n        <>\r\n          <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n              <div className=\"new-expense__control\">\r\n                <label>Título/Descrição</label>\r\n                <input\r\n                  className={titleInputClass}\r\n                  autoFocus\r\n                  type=\"text\"\r\n                  maxLength=\"15\"\r\n                  ref={titleInputRef}\r\n                />\r\n                <p>{titleErrorMsg}</p>\r\n              </div>\r\n              <div className=\"new-expense__control\">\r\n                <label>Valor da despesa</label>\r\n                <input\r\n                  className={amountInputClass}\r\n                  type=\"number\"\r\n                  step=\"0.05\"\r\n                  ref={amountInputRef}\r\n                />\r\n                <p>{amountErrorMsg}</p>\r\n              </div>\r\n              <div className=\"new-expense__control\">\r\n                <label>Tipo de Despesa</label>\r\n                <select\r\n                  onChange={changeTypeHandler}\r\n                  className=\"new-expense__control__select\"\r\n                  defaultValue=\"geral\"\r\n                >\r\n                  <option value=\"Geral\">Geral</option>\r\n                  <option value=\"Contas & Impostos\">Contas & Impostos</option>\r\n                  <option value=\"Lazer & Entretenimento\">\r\n                    Lazer & Entretenimento\r\n                  </option>\r\n                  <option value=\"Saúde & Remédios\">Saúde & Remédios</option>\r\n                  <option value=\"Academia\">Academia & Educação Física</option>\r\n                  <option value=\"Transporte & Carro\">Transporte & Carro</option>\r\n                  <option value=\"Alimentação\">Alimentação</option>\r\n                  <option value=\"Necessidades Domésticas\">\r\n                    Necessidades Domésticas\r\n                  </option>\r\n                  <option value=\"Custos com Pet's\">Custos com Pet's</option>\r\n                  <option value=\"Emergências\">Emergências</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"new-expense__control\">\r\n                <label>Data</label>\r\n                <input\r\n                  type=\"date\"\r\n                  min=\"2018-01-01\"\r\n                  max={today}\r\n                  className=\"new-expense__control__input\"\r\n                  ref={dateInputRef}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"new-expense__actions\">\r\n                <button onClick={ToggleNewExpense}>Cancelar</button>\r\n                <button>Adicionar Despesa</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <button onClick={ToggleNewExpense}>Nova Despesa</button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import ExpenseForm from \"./ExpenseForm.jsx\";\r\nimport \"../styles/NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const getRandomID = (min, max) => {\r\n    let id = String(Math.floor(Math.random() * (max - min) + min));\r\n    let checkIfIdAlreadyTaken = props.expenses.find((val) => val.id === id);\r\n    if (checkIfIdAlreadyTaken === undefined) return id;\r\n    else getRandomID(1000, 9999);\r\n  };\r\n\r\n  const expenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      id: getRandomID(1000, 9999),\r\n      ...enteredExpenseData,\r\n    };\r\n\r\n    props.onGetNewExpense(expenseData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseForm onExpenseData={expenseDataHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ExpensesContainer from \"./components/Expenses/ExpensesContainer.jsx\";\nimport ExpenseEdit from \"./components/Expenses/ExpenseEdit.jsx\";\nimport NewExpense from \"./components/NewExpense/NewExpense.jsx\";\nimport { NotificationContainer } from \"react-notifications\";\n\nconst expenses = []; //inicializa a array de despesas\n\nconst App = () => {\n  const [expensesList, setExpensesList] = useState(\n    //Verifica se há despesas armazenadas no localStorage. SE houver, retorna essas despesas. Caso nao haja,\n    //retorna a array 'expenses' vazia.\n    localStorage.expensesArray\n      ? JSON.parse(localStorage.expensesArray)\n      : expenses\n  );\n\n  const [idOfExpenseBeingEdited, setIdOfExpenseBeingEdited] =\n    useState(\"no id yet\");\n\n  const newExpenseHandler = (newExpense) => {\n    setExpensesList((prevExpenses) => {\n      let expensesArray = [newExpense, ...prevExpenses];\n      localStorage.setItem(\"expensesArray\", JSON.stringify(expensesArray));\n      return expensesArray;\n    });\n  };\n\n  const expenseIdHandler = (id) => setIdOfExpenseBeingEdited(id);\n\n  const canceledEditHandler = (dataFromExpenseEdit) => {\n    setIdOfExpenseBeingEdited(dataFromExpenseEdit);\n  };\n\n  const deletedExpenseHandler = () => {\n    setExpensesList(JSON.parse(localStorage.expensesArray));\n    setIdOfExpenseBeingEdited(\"no id yet\");\n  };\n\n  const updateUiHandler = (updatedExpenseList) => {\n    localStorage.setItem(\"expensesArray\", JSON.stringify(updatedExpenseList));\n    setExpensesList(updatedExpenseList);\n  };\n\n  return (\n    <div>\n      <NewExpense expenses={expenses} onGetNewExpense={newExpenseHandler} />\n      <ExpensesContainer\n        expenses={expensesList}\n        onExpenseId={expenseIdHandler}\n      />\n      {idOfExpenseBeingEdited === \"no id yet\"\n        ? console.log(\"no expense being edited\")\n        : ReactDOM.createPortal(\n            <ExpenseEdit\n              expenses={expensesList}\n              editedExpense={idOfExpenseBeingEdited}\n              show={idOfExpenseBeingEdited === \"no id yet\" ? false : true}\n              onGetCanceled={canceledEditHandler}\n              onGetDeleted={deletedExpenseHandler}\n              onUpdateUi={updateUiHandler}\n            />,\n            document.getElementById(\"overlay-root\")\n          )}\n      {ReactDOM.createPortal(\n        <NotificationContainer />,\n        document.getElementById(\"notification-root\")\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}